// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Amenity {
  id              String  @id @default(uuid())
  name            String
  properties      Property[]
}

enum bookingStatus {
  pending
  canceled
  confirmed
}

model Host {
  id              String @id @default(uuid())
  username        String @unique
  password        String
  name            String
  email           String
  phoneNumber     String
  profilePicture  String
  aboutMe         String
  properies       Property[]
}

model Property {
  id              String @id @default(uuid())
  title           String
  description     String
  location        String
  pricePerNight   Decimal @db.Decimal(10,2)
  bedroomCount    Int
  bathRoomCount   Int
  maxGuestCount   Int
  hostId          String
  rating          Int
  bookings        Booking[]
  reviews         Review[]
  amenities       Amenity[]

  host Host @relation(fields: [hostId], references: [id])

  @@index([hostId])
}

model User {
  id              String @id @default(uuid())
  username        String @unique
  password        String
  name            String
  email           String
  phoneNumber     String
  profilePicture  String
  bookings        Booking[]
  reviews         Review[]
}

model Review {
  id              String @id @default(uuid())
  userId          String
  propertyId      String
  rating          Int
  comment         String

  user User @relation(fields: [userId], references: [id])
  property Property @relation(fields: [propertyId], references: [id])

  @@index([userId])
  @@index([propertyId])
}

model Booking {
  id              String @id @default(uuid())
  userId          String 
  propertyId      String
  checkinDate     DateTime
  checkoutDate    DateTime
  numberOfGuests  Int
  totalPrice      Decimal @db.Decimal(10, 2)
  bookingStatus   bookingStatus

  user User @relation(fields: [userId], references: [id])
  property Property @relation(fields: [propertyId], references: [id])

  @@index([userId])
  @@index([propertyId])
}